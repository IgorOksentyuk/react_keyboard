{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressedKey","document","addEventListener","event","setState","key","removeEventListener","this","className","React","PureComponent","ReactDOM","render","getElementById"],"mappings":"oNAEaA,EAAb,4MACEC,MAAQ,CACNC,WAAY,IAFhB,uDAKE,WAA2B,IAAD,OACxBC,SAASC,iBAAiB,SAAS,SAACC,GAClC,EAAKC,SAAS,CAAEJ,WAAYG,EAAME,WAPxC,kCAWE,WACEJ,SAASK,oBAAoB,QAASC,KAAKH,YAZ/C,oBAeE,WACE,OACE,qBAAKI,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SAEKD,KAAKR,MAAMC,WAAZ,mCAEgCO,KAAKR,MAAMC,WAF3C,KACI,kCArBhB,GAAyBS,IAAMC,e,MCG/BC,IAASC,OACP,cAAC,EAAD,IACAX,SAASY,eAAe,W","file":"static/js/main.28f83bf2.chunk.js","sourcesContent":["import React from 'react';\n\nexport class App extends React.PureComponent {\n  state = {\n    pressedKey: '',\n  };\n\n  componentDidMount(): void {\n    document.addEventListener('keyup', (event: KeyboardEvent) => {\n      this.setState({ pressedKey: event.key });\n    });\n  }\n\n  componentWillUnmount(): void {\n    document.removeEventListener('keyup', this.setState);\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {\n            !this.state.pressedKey\n              ? 'Nothing was pressed yet'\n              : `The last pressed key is [${this.state.pressedKey}]`\n          }\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}